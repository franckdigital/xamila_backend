# Generated by Django 4.2.7 on 2025-08-25 13:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0011_user_monthly_goal_set_date_user_monthly_savings_goal'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Notification push'), ('IN_APP', 'Notification in-app'), ('WEBHOOK', 'Webhook')], max_length=20, verbose_name='Type de notification')),
                ('subject', models.CharField(max_length=500, verbose_name='Sujet')),
                ('message', models.TextField(verbose_name='Message')),
                ('html_content', models.TextField(blank=True, verbose_name='Contenu HTML')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='Données additionnelles')),
                ('priority', models.CharField(choices=[('LOW', 'Faible'), ('NORMAL', 'Normale'), ('HIGH', 'Élevée'), ('URGENT', 'Urgente')], default='NORMAL', max_length=10, verbose_name='Priorité')),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('SENT', 'Envoyée'), ('DELIVERED', 'Livrée'), ('OPENED', 'Ouverte'), ('CLICKED', 'Cliquée'), ('FAILED', 'Échec'), ('BOUNCED', 'Rejetée'), ('SPAM', 'Spam')], default='PENDING', max_length=20, verbose_name='Statut')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Programmée pour')),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, verbose_name="Message d'erreur")),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de tentatives')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='Nombre maximum de tentatives')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebhookEndpoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nom du webhook')),
                ('url', models.URLField(verbose_name='URL du webhook')),
                ('secret_key', models.CharField(blank=True, max_length=255, verbose_name='Clé secrète')),
                ('events', models.JSONField(default=list, verbose_name='Événements écoutés')),
                ('timeout', models.PositiveIntegerField(default=30, verbose_name='Timeout (secondes)')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='Nombre maximum de tentatives')),
                ('status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('FAILED', 'En échec'), ('SUSPENDED', 'Suspendu')], default='ACTIVE', max_length=20, verbose_name='Statut')),
                ('total_calls', models.PositiveIntegerField(default=0, verbose_name="Nombre total d'appels")),
                ('successful_calls', models.PositiveIntegerField(default=0, verbose_name='Appels réussis')),
                ('failed_calls', models.PositiveIntegerField(default=0, verbose_name='Appels échoués')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_called_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_webhooks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Endpoint webhook',
                'verbose_name_plural': 'Endpoints webhook',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nom du template')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('template_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Notification push'), ('IN_APP', 'Notification in-app'), ('WEBHOOK', 'Webhook')], max_length=20, verbose_name='Type de template')),
                ('category', models.CharField(choices=[('SYSTEM', 'Système'), ('MARKETING', 'Marketing'), ('TRANSACTIONAL', 'Transactionnel'), ('EDUCATIONAL', 'Éducationnel'), ('SECURITY', 'Sécurité'), ('TRADING', 'Trading'), ('SGI', 'SGI')], max_length=20, verbose_name='Catégorie')),
                ('subject_template', models.CharField(blank=True, max_length=500, verbose_name='Template du sujet')),
                ('body_template', models.TextField(verbose_name='Template du corps')),
                ('html_template', models.TextField(blank=True, verbose_name='Template HTML')),
                ('available_variables', models.JSONField(blank=True, default=list, help_text='Liste des variables utilisables dans le template', verbose_name='Variables disponibles')),
                ('is_active', models.BooleanField(default=True, verbose_name='Template actif')),
                ('is_default', models.BooleanField(default=False, verbose_name='Template par défaut')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_notification_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template de notification',
                'verbose_name_plural': 'Templates de notifications',
                'ordering': ['category', 'name'],
                'unique_together': {('template_type', 'category', 'is_default')},
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preferences', models.JSONField(default=dict, help_text='Structure: {channel: {category: boolean}}', verbose_name='Préférences de notification')),
                ('global_opt_out', models.BooleanField(default=False, verbose_name='Désabonnement global')),
                ('quiet_hours_start', models.TimeField(blank=True, null=True, verbose_name='Début des heures de silence')),
                ('quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='Fin des heures de silence')),
                ('digest_frequency', models.CharField(choices=[('IMMEDIATE', 'Immédiat'), ('HOURLY', 'Horaire'), ('DAILY', 'Quotidien'), ('WEEKLY', 'Hebdomadaire')], default='IMMEDIATE', max_length=20, verbose_name='Fréquence de résumé')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Préférence de notification',
                'verbose_name_plural': 'Préférences de notifications',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], max_length=20, verbose_name='Niveau de log')),
                ('message', models.TextField(verbose_name='Message')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Détails additionnels')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='core.notification')),
            ],
            options={
                'verbose_name': 'Log de notification',
                'verbose_name_plural': 'Logs de notifications',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NotificationCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la campagne')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('campaign_type', models.CharField(choices=[('ONE_TIME', 'Ponctuelle'), ('RECURRING', 'Récurrente'), ('TRIGGERED', 'Déclenchée'), ('DRIP', 'Séquentielle')], max_length=20, verbose_name='Type de campagne')),
                ('target_audience', models.CharField(choices=[('ALL_USERS', 'Tous les utilisateurs'), ('CUSTOMERS', 'Clients'), ('SGI_MANAGERS', 'Managers SGI'), ('INSTRUCTORS', 'Formateurs'), ('STUDENTS', 'Étudiants'), ('INACTIVE_USERS', 'Utilisateurs inactifs'), ('HIGH_VALUE', 'Clients à forte valeur'), ('CUSTOM', 'Audience personnalisée')], max_length=20, verbose_name='Audience cible')),
                ('custom_audience_filter', models.JSONField(blank=True, default=dict, verbose_name="Filtre d'audience personnalisée")),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Programmée pour')),
                ('recurring_pattern', models.JSONField(blank=True, default=dict, verbose_name='Modèle de récurrence')),
                ('status', models.CharField(choices=[('DRAFT', 'Brouillon'), ('SCHEDULED', 'Programmée'), ('ACTIVE', 'Active'), ('PAUSED', 'En pause'), ('COMPLETED', 'Terminée'), ('CANCELLED', 'Annulée')], default='DRAFT', max_length=20, verbose_name='Statut')),
                ('total_recipients', models.PositiveIntegerField(default=0, verbose_name='Nombre total de destinataires')),
                ('sent_count', models.PositiveIntegerField(default=0, verbose_name='Nombre envoyé')),
                ('delivered_count', models.PositiveIntegerField(default=0, verbose_name='Nombre livré')),
                ('opened_count', models.PositiveIntegerField(default=0, verbose_name='Nombre ouvert')),
                ('clicked_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de clics')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='core.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Campagne de notification',
                'verbose_name_plural': 'Campagnes de notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='core.notificationcampaign'),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('QUEUED', 'En file'), ('PROCESSING', 'En cours de traitement'), ('PROCESSED', 'Traité'), ('FAILED', 'Échec'), ('RETRYING', 'Nouvelle tentative')], default='QUEUED', max_length=20, verbose_name='Statut')),
                ('priority', models.PositiveIntegerField(default=100, help_text='Plus le nombre est faible, plus la priorité est élevée', verbose_name='Priorité')),
                ('attempts', models.PositiveIntegerField(default=0, verbose_name='Nombre de tentatives')),
                ('next_retry_at', models.DateTimeField(blank=True, null=True, verbose_name='Prochaine tentative')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entry', to='core.notification')),
            ],
            options={
                'verbose_name': 'File de notification',
                'verbose_name_plural': 'Files de notifications',
                'ordering': ['priority', 'created_at'],
                'indexes': [models.Index(fields=['status', 'priority'], name='core_notifi_status_c22334_idx'), models.Index(fields=['next_retry_at'], name='core_notifi_next_re_4bbe84_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='core_notifi_recipie_1989cb_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'status'], name='core_notifi_notific_cfce42_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_at'], name='core_notifi_schedul_340655_idx'),
        ),
    ]
