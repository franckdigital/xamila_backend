# Generated by Django 4.2.7 on 2025-08-21 14:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_alter_user_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom de la catégorie')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Image de la catégorie')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='Catégorie active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='SousCategorie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la sous-catégorie')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='Sous-catégorie active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sous_categories', to='core.categorie')),
            ],
            options={
                'verbose_name': 'Sous-catégorie',
                'verbose_name_plural': 'Sous-catégories',
                'ordering': ['categorie', 'ordre', 'nom'],
                'unique_together': {('categorie', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Banniere',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=200, verbose_name='Nom de la bannière')),
                ('image', models.ImageField(upload_to='bannieres/', verbose_name='Image de la bannière')),
                ('lien', models.URLField(blank=True, null=True, verbose_name='Lien de redirection')),
                ('position', models.CharField(choices=[('HAUT', 'Haut de page'), ('BAS', 'Bas de page'), ('DROITE', 'Côté droit'), ('GAUCHE', 'Côté gauche')], max_length=10, verbose_name='Position sur la page')),
                ('largeur', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(2000)], verbose_name='Largeur (px)')),
                ('hauteur', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(1000)], verbose_name='Hauteur (px)')),
                ('annonceur', models.CharField(blank=True, max_length=200, verbose_name="Nom de l'annonceur")),
                ('prix', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Prix de la publicité')),
                ('date_debut', models.DateTimeField(verbose_name="Date de début d'affichage")),
                ('date_fin', models.DateTimeField(verbose_name="Date de fin d'affichage")),
                ('nb_impressions', models.PositiveIntegerField(default=0, verbose_name="Nombre d'impressions")),
                ('nb_clics', models.PositiveIntegerField(default=0, verbose_name='Nombre de clics')),
                ('is_active', models.BooleanField(default=True, verbose_name='Bannière active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['ADMIN', 'SUPPORT']}, on_delete=django.db.models.deletion.CASCADE, related_name='bannieres_creees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bannière publicitaire',
                'verbose_name_plural': 'Bannières publicitaires',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Actualites',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=200, verbose_name="Titre de l'article")),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(help_text="Résumé de l'article affiché dans les listes", max_length=500, verbose_name='Description courte')),
                ('contenu', models.TextField(verbose_name="Contenu complet de l'article")),
                ('image', models.ImageField(help_text="Image affichée en tête d'article et dans les listes", upload_to='actualites/', verbose_name='Image principale')),
                ('image_alt', models.CharField(blank=True, max_length=200, verbose_name="Texte alternatif de l'image")),
                ('tags', models.JSONField(blank=True, default=list, help_text="Liste des tags associés à l'article", verbose_name='Mots-clés')),
                ('date_publication', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de publication')),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('PUBLIE', 'Publié'), ('ARCHIVE', 'Archivé')], default='BROUILLON', max_length=10, verbose_name='Statut')),
                ('acces', models.CharField(choices=[('FREE', 'Gratuit'), ('PREMIUM', 'Premium')], default='FREE', max_length=10, verbose_name="Type d'accès")),
                ('meta_title', models.CharField(blank=True, help_text='Titre optimisé pour les moteurs de recherche', max_length=60, verbose_name='Titre SEO')),
                ('meta_description', models.CharField(blank=True, help_text='Description optimisée pour les moteurs de recherche', max_length=160, verbose_name='Description SEO')),
                ('nb_vues', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('nb_partages', models.PositiveIntegerField(default=0, verbose_name='Nombre de partages')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Article à la une')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Autoriser les commentaires')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(limit_choices_to={'role__in': ['ADMIN', 'INSTRUCTOR', 'SUPPORT']}, on_delete=django.db.models.deletion.CASCADE, related_name='articles_rediges', to=settings.AUTH_USER_MODEL)),
                ('banniere_bas', models.ForeignKey(blank=True, limit_choices_to={'position': 'BAS'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles_bas', to='core.banniere')),
                ('banniere_droite', models.ForeignKey(blank=True, limit_choices_to={'position': 'DROITE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles_droite', to='core.banniere')),
                ('banniere_gauche', models.ForeignKey(blank=True, limit_choices_to={'position': 'GAUCHE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles_gauche', to='core.banniere')),
                ('banniere_haut', models.ForeignKey(blank=True, limit_choices_to={'position': 'HAUT'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles_haut', to='core.banniere')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='core.categorie')),
                ('sous_categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='core.souscategorie')),
            ],
            options={
                'verbose_name': "Article d'actualité",
                'verbose_name_plural': "Articles d'actualités",
                'ordering': ['-date_publication'],
            },
        ),
        migrations.CreateModel(
            name='LectureArticle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('temps_lecture', models.DurationField(blank=True, null=True, verbose_name='Temps passé à lire')),
                ('pourcentage_lu', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Pourcentage lu')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Lecture terminée')),
                ('is_bookmarked', models.BooleanField(default=False, verbose_name='Article mis en favoris')),
                ('first_read_at', models.DateTimeField(auto_now_add=True)),
                ('last_read_at', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', to='core.actualites')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures_articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Lecture d'article",
                'verbose_name_plural': "Lectures d'articles",
                'ordering': ['-last_read_at'],
                'indexes': [models.Index(fields=['utilisateur', 'is_bookmarked'], name='core_lectur_utilisa_212f03_idx'), models.Index(fields=['article', 'is_complete'], name='core_lectur_article_093b02_idx')],
                'unique_together': {('utilisateur', 'article')},
            },
        ),
        migrations.CreateModel(
            name='CommentaireArticle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contenu', models.TextField(verbose_name='Contenu du commentaire')),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente de modération'), ('APPROUVE', 'Approuvé'), ('REJETE', 'Rejeté')], default='EN_ATTENTE', max_length=15, verbose_name='Statut')),
                ('raison_rejet', models.TextField(blank=True, verbose_name='Raison du rejet')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires', to='core.actualites')),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires_articles', to=settings.AUTH_USER_MODEL)),
                ('modere_par', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['ADMIN', 'SUPPORT']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commentaires_moderes', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='core.commentairearticle')),
            ],
            options={
                'verbose_name': "Commentaire d'article",
                'verbose_name_plural': "Commentaires d'articles",
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['article', 'statut'], name='core_commen_article_4ea2e6_idx'), models.Index(fields=['auteur', 'statut'], name='core_commen_auteur__b70340_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='banniere',
            index=models.Index(fields=['position', 'is_active'], name='core_bannie_positio_a98376_idx'),
        ),
        migrations.AddIndex(
            model_name='banniere',
            index=models.Index(fields=['date_debut', 'date_fin'], name='core_bannie_date_de_8844d4_idx'),
        ),
        migrations.AddIndex(
            model_name='actualites',
            index=models.Index(fields=['statut', 'acces'], name='core_actual_statut_a00ba6_idx'),
        ),
        migrations.AddIndex(
            model_name='actualites',
            index=models.Index(fields=['categorie', 'statut'], name='core_actual_categor_32c17a_idx'),
        ),
        migrations.AddIndex(
            model_name='actualites',
            index=models.Index(fields=['date_publication', 'statut'], name='core_actual_date_pu_7c161d_idx'),
        ),
        migrations.AddIndex(
            model_name='actualites',
            index=models.Index(fields=['is_featured', 'statut'], name='core_actual_is_feat_5df331_idx'),
        ),
        migrations.AddIndex(
            model_name='actualites',
            index=models.Index(fields=['slug'], name='core_actual_slug_14c4fd_idx'),
        ),
    ]
